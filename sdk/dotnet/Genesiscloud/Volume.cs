// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace GenesisCloud.PulumiPackage.Genesiscloud
{
    /// <summary>
    /// Volume resource
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Genesiscloud = GenesisCloud.PulumiPackage.Genesiscloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Genesiscloud.Volume("example", new()
    ///     {
    ///         Region = "ARC-IS-HAF-1",
    ///         Size = 50,
    ///         Type = "hdd",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import genesiscloud:index/volume:Volume example 18efeec8-94f0-4776-8ff2-5e9b49c74608
    /// ```
    /// </summary>
    [GenesiscloudResourceType("genesiscloud:index/volume:Volume")]
    public partial class Volume : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The timestamp when this volume was created in RFC 3339.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The human-readable description for the volume. - Sets the default value "" if the attribute is not set.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The human-readable name for the volume.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The region identifier. - If the value of this attribute changes, Terraform will destroy and recreate the resource. - The
        /// value must be one of: ["ARC-IS-HAF-1" "EUC-DE-MUC-1" "NORD-NO-KRS-1"].
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Flag to retain the volume when the resource is deleted - Sets the default value "false" if the attribute is not set.
        /// </summary>
        [Output("retainOnDelete")]
        public Output<bool> RetainOnDelete { get; private set; } = null!;

        /// <summary>
        /// The storage size of this volume given in GiB. - If the value of this attribute changes, Terraform will destroy and
        /// recreate the resource. - The value must be at least 1.
        /// </summary>
        [Output("size")]
        public Output<int> Size { get; private set; } = null!;

        /// <summary>
        /// The volume status.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.VolumeTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// The storage type of the volume. - If the value of this attribute changes, Terraform will destroy and recreate the
        /// resource. - The value must be one of: ["hdd" "ssd"].
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Volume resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Volume(string name, VolumeArgs args, CustomResourceOptions? options = null)
            : base("genesiscloud:index/volume:Volume", name, args ?? new VolumeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Volume(string name, Input<string> id, VolumeState? state = null, CustomResourceOptions? options = null)
            : base("genesiscloud:index/volume:Volume", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/genesiscloud",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Volume resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Volume Get(string name, Input<string> id, VolumeState? state = null, CustomResourceOptions? options = null)
        {
            return new Volume(name, id, state, options);
        }
    }

    public sealed class VolumeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The human-readable description for the volume. - Sets the default value "" if the attribute is not set.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The human-readable name for the volume.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The region identifier. - If the value of this attribute changes, Terraform will destroy and recreate the resource. - The
        /// value must be one of: ["ARC-IS-HAF-1" "EUC-DE-MUC-1" "NORD-NO-KRS-1"].
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// Flag to retain the volume when the resource is deleted - Sets the default value "false" if the attribute is not set.
        /// </summary>
        [Input("retainOnDelete")]
        public Input<bool>? RetainOnDelete { get; set; }

        /// <summary>
        /// The storage size of this volume given in GiB. - If the value of this attribute changes, Terraform will destroy and
        /// recreate the resource. - The value must be at least 1.
        /// </summary>
        [Input("size", required: true)]
        public Input<int> Size { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.VolumeTimeoutsArgs>? Timeouts { get; set; }

        /// <summary>
        /// The storage type of the volume. - If the value of this attribute changes, Terraform will destroy and recreate the
        /// resource. - The value must be one of: ["hdd" "ssd"].
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public VolumeArgs()
        {
        }
        public static new VolumeArgs Empty => new VolumeArgs();
    }

    public sealed class VolumeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The timestamp when this volume was created in RFC 3339.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The human-readable description for the volume. - Sets the default value "" if the attribute is not set.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The human-readable name for the volume.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The region identifier. - If the value of this attribute changes, Terraform will destroy and recreate the resource. - The
        /// value must be one of: ["ARC-IS-HAF-1" "EUC-DE-MUC-1" "NORD-NO-KRS-1"].
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Flag to retain the volume when the resource is deleted - Sets the default value "false" if the attribute is not set.
        /// </summary>
        [Input("retainOnDelete")]
        public Input<bool>? RetainOnDelete { get; set; }

        /// <summary>
        /// The storage size of this volume given in GiB. - If the value of this attribute changes, Terraform will destroy and
        /// recreate the resource. - The value must be at least 1.
        /// </summary>
        [Input("size")]
        public Input<int>? Size { get; set; }

        /// <summary>
        /// The volume status.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("timeouts")]
        public Input<Inputs.VolumeTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// The storage type of the volume. - If the value of this attribute changes, Terraform will destroy and recreate the
        /// resource. - The value must be one of: ["hdd" "ssd"].
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public VolumeState()
        {
        }
        public static new VolumeState Empty => new VolumeState();
    }
}

// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package genesiscloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/genesiscloud/pulumi-genesiscloud/sdk/go/genesiscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// floating IP resource
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/genesiscloud/pulumi-genesiscloud/sdk/go/genesiscloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := genesiscloud.NewFloatingIp(ctx, "floatingIp", &genesiscloud.FloatingIpArgs{
//				Description: pulumi.String("The description for you terraform floating IP."),
//				Region:      pulumi.String("ARC-IS-HAF-1"),
//				Version:     pulumi.String("ipv4"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import genesiscloud:index/floatingIp:FloatingIp example 18efeec8-94f0-4776-8ff2-5e9b49c74608
//
// ```
type FloatingIp struct {
	pulumi.CustomResourceState

	// The timestamp when this floating IP was created in RFC 3339.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The human-readable description set for the floating IP.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The IP address of the floating IP.
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	// Whether the floating IP is public or private. - Sets the default value "true" if the attribute is not set.
	IsPublic pulumi.BoolOutput `pulumi:"isPublic"`
	// The human-readable name for the floating IP.
	Name pulumi.StringOutput `pulumi:"name"`
	// The region identifier. - If the value of this attribute changes, Terraform will destroy and recreate the resource. - The
	// value must be one of: ["ARC-IS-HAF-1" "EUC-DE-MUC-1" "NORD-NO-KRS-1"].
	Region pulumi.StringOutput `pulumi:"region"`
	// The floating IP status.
	Status   pulumi.StringOutput         `pulumi:"status"`
	Timeouts FloatingIpTimeoutsPtrOutput `pulumi:"timeouts"`
	// The timestamp when this image was last updated in RFC 3339.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// The version of the floating IP. - If the value of this attribute changes, Terraform will destroy and recreate the
	// resource. - The value must be one of: ["ipv4"].
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewFloatingIp registers a new resource with the given unique name, arguments, and options.
func NewFloatingIp(ctx *pulumi.Context,
	name string, args *FloatingIpArgs, opts ...pulumi.ResourceOption) (*FloatingIp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FloatingIp
	err := ctx.RegisterResource("genesiscloud:index/floatingIp:FloatingIp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFloatingIp gets an existing FloatingIp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFloatingIp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FloatingIpState, opts ...pulumi.ResourceOption) (*FloatingIp, error) {
	var resource FloatingIp
	err := ctx.ReadResource("genesiscloud:index/floatingIp:FloatingIp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FloatingIp resources.
type floatingIpState struct {
	// The timestamp when this floating IP was created in RFC 3339.
	CreatedAt *string `pulumi:"createdAt"`
	// The human-readable description set for the floating IP.
	Description *string `pulumi:"description"`
	// The IP address of the floating IP.
	IpAddress *string `pulumi:"ipAddress"`
	// Whether the floating IP is public or private. - Sets the default value "true" if the attribute is not set.
	IsPublic *bool `pulumi:"isPublic"`
	// The human-readable name for the floating IP.
	Name *string `pulumi:"name"`
	// The region identifier. - If the value of this attribute changes, Terraform will destroy and recreate the resource. - The
	// value must be one of: ["ARC-IS-HAF-1" "EUC-DE-MUC-1" "NORD-NO-KRS-1"].
	Region *string `pulumi:"region"`
	// The floating IP status.
	Status   *string             `pulumi:"status"`
	Timeouts *FloatingIpTimeouts `pulumi:"timeouts"`
	// The timestamp when this image was last updated in RFC 3339.
	UpdatedAt *string `pulumi:"updatedAt"`
	// The version of the floating IP. - If the value of this attribute changes, Terraform will destroy and recreate the
	// resource. - The value must be one of: ["ipv4"].
	Version *string `pulumi:"version"`
}

type FloatingIpState struct {
	// The timestamp when this floating IP was created in RFC 3339.
	CreatedAt pulumi.StringPtrInput
	// The human-readable description set for the floating IP.
	Description pulumi.StringPtrInput
	// The IP address of the floating IP.
	IpAddress pulumi.StringPtrInput
	// Whether the floating IP is public or private. - Sets the default value "true" if the attribute is not set.
	IsPublic pulumi.BoolPtrInput
	// The human-readable name for the floating IP.
	Name pulumi.StringPtrInput
	// The region identifier. - If the value of this attribute changes, Terraform will destroy and recreate the resource. - The
	// value must be one of: ["ARC-IS-HAF-1" "EUC-DE-MUC-1" "NORD-NO-KRS-1"].
	Region pulumi.StringPtrInput
	// The floating IP status.
	Status   pulumi.StringPtrInput
	Timeouts FloatingIpTimeoutsPtrInput
	// The timestamp when this image was last updated in RFC 3339.
	UpdatedAt pulumi.StringPtrInput
	// The version of the floating IP. - If the value of this attribute changes, Terraform will destroy and recreate the
	// resource. - The value must be one of: ["ipv4"].
	Version pulumi.StringPtrInput
}

func (FloatingIpState) ElementType() reflect.Type {
	return reflect.TypeOf((*floatingIpState)(nil)).Elem()
}

type floatingIpArgs struct {
	// The human-readable description set for the floating IP.
	Description *string `pulumi:"description"`
	// The human-readable name for the floating IP.
	Name *string `pulumi:"name"`
	// The region identifier. - If the value of this attribute changes, Terraform will destroy and recreate the resource. - The
	// value must be one of: ["ARC-IS-HAF-1" "EUC-DE-MUC-1" "NORD-NO-KRS-1"].
	Region   string              `pulumi:"region"`
	Timeouts *FloatingIpTimeouts `pulumi:"timeouts"`
	// The version of the floating IP. - If the value of this attribute changes, Terraform will destroy and recreate the
	// resource. - The value must be one of: ["ipv4"].
	Version string `pulumi:"version"`
}

// The set of arguments for constructing a FloatingIp resource.
type FloatingIpArgs struct {
	// The human-readable description set for the floating IP.
	Description pulumi.StringPtrInput
	// The human-readable name for the floating IP.
	Name pulumi.StringPtrInput
	// The region identifier. - If the value of this attribute changes, Terraform will destroy and recreate the resource. - The
	// value must be one of: ["ARC-IS-HAF-1" "EUC-DE-MUC-1" "NORD-NO-KRS-1"].
	Region   pulumi.StringInput
	Timeouts FloatingIpTimeoutsPtrInput
	// The version of the floating IP. - If the value of this attribute changes, Terraform will destroy and recreate the
	// resource. - The value must be one of: ["ipv4"].
	Version pulumi.StringInput
}

func (FloatingIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*floatingIpArgs)(nil)).Elem()
}

type FloatingIpInput interface {
	pulumi.Input

	ToFloatingIpOutput() FloatingIpOutput
	ToFloatingIpOutputWithContext(ctx context.Context) FloatingIpOutput
}

func (*FloatingIp) ElementType() reflect.Type {
	return reflect.TypeOf((**FloatingIp)(nil)).Elem()
}

func (i *FloatingIp) ToFloatingIpOutput() FloatingIpOutput {
	return i.ToFloatingIpOutputWithContext(context.Background())
}

func (i *FloatingIp) ToFloatingIpOutputWithContext(ctx context.Context) FloatingIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FloatingIpOutput)
}

// FloatingIpArrayInput is an input type that accepts FloatingIpArray and FloatingIpArrayOutput values.
// You can construct a concrete instance of `FloatingIpArrayInput` via:
//
//	FloatingIpArray{ FloatingIpArgs{...} }
type FloatingIpArrayInput interface {
	pulumi.Input

	ToFloatingIpArrayOutput() FloatingIpArrayOutput
	ToFloatingIpArrayOutputWithContext(context.Context) FloatingIpArrayOutput
}

type FloatingIpArray []FloatingIpInput

func (FloatingIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FloatingIp)(nil)).Elem()
}

func (i FloatingIpArray) ToFloatingIpArrayOutput() FloatingIpArrayOutput {
	return i.ToFloatingIpArrayOutputWithContext(context.Background())
}

func (i FloatingIpArray) ToFloatingIpArrayOutputWithContext(ctx context.Context) FloatingIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FloatingIpArrayOutput)
}

// FloatingIpMapInput is an input type that accepts FloatingIpMap and FloatingIpMapOutput values.
// You can construct a concrete instance of `FloatingIpMapInput` via:
//
//	FloatingIpMap{ "key": FloatingIpArgs{...} }
type FloatingIpMapInput interface {
	pulumi.Input

	ToFloatingIpMapOutput() FloatingIpMapOutput
	ToFloatingIpMapOutputWithContext(context.Context) FloatingIpMapOutput
}

type FloatingIpMap map[string]FloatingIpInput

func (FloatingIpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FloatingIp)(nil)).Elem()
}

func (i FloatingIpMap) ToFloatingIpMapOutput() FloatingIpMapOutput {
	return i.ToFloatingIpMapOutputWithContext(context.Background())
}

func (i FloatingIpMap) ToFloatingIpMapOutputWithContext(ctx context.Context) FloatingIpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FloatingIpMapOutput)
}

type FloatingIpOutput struct{ *pulumi.OutputState }

func (FloatingIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FloatingIp)(nil)).Elem()
}

func (o FloatingIpOutput) ToFloatingIpOutput() FloatingIpOutput {
	return o
}

func (o FloatingIpOutput) ToFloatingIpOutputWithContext(ctx context.Context) FloatingIpOutput {
	return o
}

// The timestamp when this floating IP was created in RFC 3339.
func (o FloatingIpOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *FloatingIp) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The human-readable description set for the floating IP.
func (o FloatingIpOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FloatingIp) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The IP address of the floating IP.
func (o FloatingIpOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *FloatingIp) pulumi.StringOutput { return v.IpAddress }).(pulumi.StringOutput)
}

// Whether the floating IP is public or private. - Sets the default value "true" if the attribute is not set.
func (o FloatingIpOutput) IsPublic() pulumi.BoolOutput {
	return o.ApplyT(func(v *FloatingIp) pulumi.BoolOutput { return v.IsPublic }).(pulumi.BoolOutput)
}

// The human-readable name for the floating IP.
func (o FloatingIpOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FloatingIp) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The region identifier. - If the value of this attribute changes, Terraform will destroy and recreate the resource. - The
// value must be one of: ["ARC-IS-HAF-1" "EUC-DE-MUC-1" "NORD-NO-KRS-1"].
func (o FloatingIpOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *FloatingIp) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The floating IP status.
func (o FloatingIpOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *FloatingIp) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o FloatingIpOutput) Timeouts() FloatingIpTimeoutsPtrOutput {
	return o.ApplyT(func(v *FloatingIp) FloatingIpTimeoutsPtrOutput { return v.Timeouts }).(FloatingIpTimeoutsPtrOutput)
}

// The timestamp when this image was last updated in RFC 3339.
func (o FloatingIpOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *FloatingIp) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The version of the floating IP. - If the value of this attribute changes, Terraform will destroy and recreate the
// resource. - The value must be one of: ["ipv4"].
func (o FloatingIpOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *FloatingIp) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type FloatingIpArrayOutput struct{ *pulumi.OutputState }

func (FloatingIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FloatingIp)(nil)).Elem()
}

func (o FloatingIpArrayOutput) ToFloatingIpArrayOutput() FloatingIpArrayOutput {
	return o
}

func (o FloatingIpArrayOutput) ToFloatingIpArrayOutputWithContext(ctx context.Context) FloatingIpArrayOutput {
	return o
}

func (o FloatingIpArrayOutput) Index(i pulumi.IntInput) FloatingIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FloatingIp {
		return vs[0].([]*FloatingIp)[vs[1].(int)]
	}).(FloatingIpOutput)
}

type FloatingIpMapOutput struct{ *pulumi.OutputState }

func (FloatingIpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FloatingIp)(nil)).Elem()
}

func (o FloatingIpMapOutput) ToFloatingIpMapOutput() FloatingIpMapOutput {
	return o
}

func (o FloatingIpMapOutput) ToFloatingIpMapOutputWithContext(ctx context.Context) FloatingIpMapOutput {
	return o
}

func (o FloatingIpMapOutput) MapIndex(k pulumi.StringInput) FloatingIpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FloatingIp {
		return vs[0].(map[string]*FloatingIp)[vs[1].(string)]
	}).(FloatingIpOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FloatingIpInput)(nil)).Elem(), &FloatingIp{})
	pulumi.RegisterInputType(reflect.TypeOf((*FloatingIpArrayInput)(nil)).Elem(), FloatingIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FloatingIpMapInput)(nil)).Elem(), FloatingIpMap{})
	pulumi.RegisterOutputType(FloatingIpOutput{})
	pulumi.RegisterOutputType(FloatingIpArrayOutput{})
	pulumi.RegisterOutputType(FloatingIpMapOutput{})
}

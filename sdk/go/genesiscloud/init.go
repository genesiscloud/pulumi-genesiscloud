// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package genesiscloud

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/genesiscloud/pulumi-genesiscloud/sdk/go/genesiscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "genesiscloud:index/filesystem:Filesystem":
		r = &Filesystem{}
	case "genesiscloud:index/floatingIp:FloatingIp":
		r = &FloatingIp{}
	case "genesiscloud:index/instance:Instance":
		r = &Instance{}
	case "genesiscloud:index/instanceStatus:InstanceStatus":
		r = &InstanceStatus{}
	case "genesiscloud:index/sSHKey:SSHKey":
		r = &SSHKey{}
	case "genesiscloud:index/securityGroup:SecurityGroup":
		r = &SecurityGroup{}
	case "genesiscloud:index/snapshot:Snapshot":
		r = &Snapshot{}
	case "genesiscloud:index/volume:Volume":
		r = &Volume{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:genesiscloud" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"genesiscloud",
		"index/filesystem",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"genesiscloud",
		"index/floatingIp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"genesiscloud",
		"index/instance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"genesiscloud",
		"index/instanceStatus",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"genesiscloud",
		"index/sSHKey",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"genesiscloud",
		"index/securityGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"genesiscloud",
		"index/snapshot",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"genesiscloud",
		"index/volume",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"genesiscloud",
		&pkg{version},
	)
}

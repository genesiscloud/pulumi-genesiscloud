// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package genesiscloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/genesiscloud/pulumi-genesiscloud/sdk/go/genesiscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// InstanceStatus resource
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/genesiscloud/pulumi-genesiscloud/sdk/go/genesiscloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleInstance, err := genesiscloud.NewInstance(ctx, "exampleInstance", &genesiscloud.InstanceArgs{
//				Region: pulumi.String("NORD-NO-KRS-1"),
//				Image:  pulumi.String("ubuntu:22.04"),
//				Type:   pulumi.String("vcpu-2_memory-4g"),
//				SshKeyIds: pulumi.StringArray{
//					pulumi.String("my-ssh-key-id"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = genesiscloud.NewInstanceStatus(ctx, "exampleInstanceStatus", &genesiscloud.InstanceStatusArgs{
//				InstanceId: exampleInstance.ID(),
//				Status:     pulumi.String("active"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import genesiscloud:index/instanceStatus:InstanceStatus example 18efeec8-94f0-4776-8ff2-5e9b49c74608
// ```
type InstanceStatus struct {
	pulumi.CustomResourceState

	// The id of the instance this refers to. - If the value of this attribute changes, the resource will be replaced.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The target instance status. - The value must be one of: ["active" "stopped"].
	Status   pulumi.StringOutput             `pulumi:"status"`
	Timeouts InstanceStatusTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewInstanceStatus registers a new resource with the given unique name, arguments, and options.
func NewInstanceStatus(ctx *pulumi.Context,
	name string, args *InstanceStatusArgs, opts ...pulumi.ResourceOption) (*InstanceStatus, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InstanceStatus
	err := ctx.RegisterResource("genesiscloud:index/instanceStatus:InstanceStatus", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceStatus gets an existing InstanceStatus resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceStatus(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceStatusState, opts ...pulumi.ResourceOption) (*InstanceStatus, error) {
	var resource InstanceStatus
	err := ctx.ReadResource("genesiscloud:index/instanceStatus:InstanceStatus", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceStatus resources.
type instanceStatusState struct {
	// The id of the instance this refers to. - If the value of this attribute changes, the resource will be replaced.
	InstanceId *string `pulumi:"instanceId"`
	// The target instance status. - The value must be one of: ["active" "stopped"].
	Status   *string                 `pulumi:"status"`
	Timeouts *InstanceStatusTimeouts `pulumi:"timeouts"`
}

type InstanceStatusState struct {
	// The id of the instance this refers to. - If the value of this attribute changes, the resource will be replaced.
	InstanceId pulumi.StringPtrInput
	// The target instance status. - The value must be one of: ["active" "stopped"].
	Status   pulumi.StringPtrInput
	Timeouts InstanceStatusTimeoutsPtrInput
}

func (InstanceStatusState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceStatusState)(nil)).Elem()
}

type instanceStatusArgs struct {
	// The id of the instance this refers to. - If the value of this attribute changes, the resource will be replaced.
	InstanceId string `pulumi:"instanceId"`
	// The target instance status. - The value must be one of: ["active" "stopped"].
	Status   string                  `pulumi:"status"`
	Timeouts *InstanceStatusTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a InstanceStatus resource.
type InstanceStatusArgs struct {
	// The id of the instance this refers to. - If the value of this attribute changes, the resource will be replaced.
	InstanceId pulumi.StringInput
	// The target instance status. - The value must be one of: ["active" "stopped"].
	Status   pulumi.StringInput
	Timeouts InstanceStatusTimeoutsPtrInput
}

func (InstanceStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceStatusArgs)(nil)).Elem()
}

type InstanceStatusInput interface {
	pulumi.Input

	ToInstanceStatusOutput() InstanceStatusOutput
	ToInstanceStatusOutputWithContext(ctx context.Context) InstanceStatusOutput
}

func (*InstanceStatus) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStatus)(nil)).Elem()
}

func (i *InstanceStatus) ToInstanceStatusOutput() InstanceStatusOutput {
	return i.ToInstanceStatusOutputWithContext(context.Background())
}

func (i *InstanceStatus) ToInstanceStatusOutputWithContext(ctx context.Context) InstanceStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStatusOutput)
}

// InstanceStatusArrayInput is an input type that accepts InstanceStatusArray and InstanceStatusArrayOutput values.
// You can construct a concrete instance of `InstanceStatusArrayInput` via:
//
//	InstanceStatusArray{ InstanceStatusArgs{...} }
type InstanceStatusArrayInput interface {
	pulumi.Input

	ToInstanceStatusArrayOutput() InstanceStatusArrayOutput
	ToInstanceStatusArrayOutputWithContext(context.Context) InstanceStatusArrayOutput
}

type InstanceStatusArray []InstanceStatusInput

func (InstanceStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceStatus)(nil)).Elem()
}

func (i InstanceStatusArray) ToInstanceStatusArrayOutput() InstanceStatusArrayOutput {
	return i.ToInstanceStatusArrayOutputWithContext(context.Background())
}

func (i InstanceStatusArray) ToInstanceStatusArrayOutputWithContext(ctx context.Context) InstanceStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStatusArrayOutput)
}

// InstanceStatusMapInput is an input type that accepts InstanceStatusMap and InstanceStatusMapOutput values.
// You can construct a concrete instance of `InstanceStatusMapInput` via:
//
//	InstanceStatusMap{ "key": InstanceStatusArgs{...} }
type InstanceStatusMapInput interface {
	pulumi.Input

	ToInstanceStatusMapOutput() InstanceStatusMapOutput
	ToInstanceStatusMapOutputWithContext(context.Context) InstanceStatusMapOutput
}

type InstanceStatusMap map[string]InstanceStatusInput

func (InstanceStatusMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceStatus)(nil)).Elem()
}

func (i InstanceStatusMap) ToInstanceStatusMapOutput() InstanceStatusMapOutput {
	return i.ToInstanceStatusMapOutputWithContext(context.Background())
}

func (i InstanceStatusMap) ToInstanceStatusMapOutputWithContext(ctx context.Context) InstanceStatusMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStatusMapOutput)
}

type InstanceStatusOutput struct{ *pulumi.OutputState }

func (InstanceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStatus)(nil)).Elem()
}

func (o InstanceStatusOutput) ToInstanceStatusOutput() InstanceStatusOutput {
	return o
}

func (o InstanceStatusOutput) ToInstanceStatusOutputWithContext(ctx context.Context) InstanceStatusOutput {
	return o
}

// The id of the instance this refers to. - If the value of this attribute changes, the resource will be replaced.
func (o InstanceStatusOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceStatus) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The target instance status. - The value must be one of: ["active" "stopped"].
func (o InstanceStatusOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceStatus) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o InstanceStatusOutput) Timeouts() InstanceStatusTimeoutsPtrOutput {
	return o.ApplyT(func(v *InstanceStatus) InstanceStatusTimeoutsPtrOutput { return v.Timeouts }).(InstanceStatusTimeoutsPtrOutput)
}

type InstanceStatusArrayOutput struct{ *pulumi.OutputState }

func (InstanceStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceStatus)(nil)).Elem()
}

func (o InstanceStatusArrayOutput) ToInstanceStatusArrayOutput() InstanceStatusArrayOutput {
	return o
}

func (o InstanceStatusArrayOutput) ToInstanceStatusArrayOutputWithContext(ctx context.Context) InstanceStatusArrayOutput {
	return o
}

func (o InstanceStatusArrayOutput) Index(i pulumi.IntInput) InstanceStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InstanceStatus {
		return vs[0].([]*InstanceStatus)[vs[1].(int)]
	}).(InstanceStatusOutput)
}

type InstanceStatusMapOutput struct{ *pulumi.OutputState }

func (InstanceStatusMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceStatus)(nil)).Elem()
}

func (o InstanceStatusMapOutput) ToInstanceStatusMapOutput() InstanceStatusMapOutput {
	return o
}

func (o InstanceStatusMapOutput) ToInstanceStatusMapOutputWithContext(ctx context.Context) InstanceStatusMapOutput {
	return o
}

func (o InstanceStatusMapOutput) MapIndex(k pulumi.StringInput) InstanceStatusOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InstanceStatus {
		return vs[0].(map[string]*InstanceStatus)[vs[1].(string)]
	}).(InstanceStatusOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStatusInput)(nil)).Elem(), &InstanceStatus{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStatusArrayInput)(nil)).Elem(), InstanceStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStatusMapInput)(nil)).Elem(), InstanceStatusMap{})
	pulumi.RegisterOutputType(InstanceStatusOutput{})
	pulumi.RegisterOutputType(InstanceStatusArrayOutput{})
	pulumi.RegisterOutputType(InstanceStatusMapOutput{})
}

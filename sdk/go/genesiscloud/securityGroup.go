// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package genesiscloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/genesiscloud/pulumi-genesiscloud/sdk/go/genesiscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Security group resource
//
// ## Import
//
// ```sh
//
//	$ pulumi import genesiscloud:index/securityGroup:SecurityGroup example 18efeec8-94f0-4776-8ff2-5e9b49c74608
//
// ```
type SecurityGroup struct {
	pulumi.CustomResourceState

	// The timestamp when this security group was created in RFC 3339.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The human-readable description for the security group. - Sets the default value "" if the attribute is not set.
	Description pulumi.StringOutput `pulumi:"description"`
	// The human-readable name for the security group.
	Name pulumi.StringOutput `pulumi:"name"`
	// The region identifier. - If the value of this attribute changes, Terraform will destroy and recreate the resource. - The
	// value must be one of: ["ARC-IS-HAF-1" "EUC-DE-MUC-1" "NORD-NO-KRS-1"].
	Region pulumi.StringOutput          `pulumi:"region"`
	Rules  SecurityGroupRuleArrayOutput `pulumi:"rules"`
	// The security group status.
	Status   pulumi.StringOutput            `pulumi:"status"`
	Timeouts SecurityGroupTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewSecurityGroup registers a new resource with the given unique name, arguments, and options.
func NewSecurityGroup(ctx *pulumi.Context,
	name string, args *SecurityGroupArgs, opts ...pulumi.ResourceOption) (*SecurityGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityGroup
	err := ctx.RegisterResource("genesiscloud:index/securityGroup:SecurityGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityGroup gets an existing SecurityGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityGroupState, opts ...pulumi.ResourceOption) (*SecurityGroup, error) {
	var resource SecurityGroup
	err := ctx.ReadResource("genesiscloud:index/securityGroup:SecurityGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityGroup resources.
type securityGroupState struct {
	// The timestamp when this security group was created in RFC 3339.
	CreatedAt *string `pulumi:"createdAt"`
	// The human-readable description for the security group. - Sets the default value "" if the attribute is not set.
	Description *string `pulumi:"description"`
	// The human-readable name for the security group.
	Name *string `pulumi:"name"`
	// The region identifier. - If the value of this attribute changes, Terraform will destroy and recreate the resource. - The
	// value must be one of: ["ARC-IS-HAF-1" "EUC-DE-MUC-1" "NORD-NO-KRS-1"].
	Region *string             `pulumi:"region"`
	Rules  []SecurityGroupRule `pulumi:"rules"`
	// The security group status.
	Status   *string                `pulumi:"status"`
	Timeouts *SecurityGroupTimeouts `pulumi:"timeouts"`
}

type SecurityGroupState struct {
	// The timestamp when this security group was created in RFC 3339.
	CreatedAt pulumi.StringPtrInput
	// The human-readable description for the security group. - Sets the default value "" if the attribute is not set.
	Description pulumi.StringPtrInput
	// The human-readable name for the security group.
	Name pulumi.StringPtrInput
	// The region identifier. - If the value of this attribute changes, Terraform will destroy and recreate the resource. - The
	// value must be one of: ["ARC-IS-HAF-1" "EUC-DE-MUC-1" "NORD-NO-KRS-1"].
	Region pulumi.StringPtrInput
	Rules  SecurityGroupRuleArrayInput
	// The security group status.
	Status   pulumi.StringPtrInput
	Timeouts SecurityGroupTimeoutsPtrInput
}

func (SecurityGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupState)(nil)).Elem()
}

type securityGroupArgs struct {
	// The human-readable description for the security group. - Sets the default value "" if the attribute is not set.
	Description *string `pulumi:"description"`
	// The human-readable name for the security group.
	Name *string `pulumi:"name"`
	// The region identifier. - If the value of this attribute changes, Terraform will destroy and recreate the resource. - The
	// value must be one of: ["ARC-IS-HAF-1" "EUC-DE-MUC-1" "NORD-NO-KRS-1"].
	Region   string                 `pulumi:"region"`
	Rules    []SecurityGroupRule    `pulumi:"rules"`
	Timeouts *SecurityGroupTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a SecurityGroup resource.
type SecurityGroupArgs struct {
	// The human-readable description for the security group. - Sets the default value "" if the attribute is not set.
	Description pulumi.StringPtrInput
	// The human-readable name for the security group.
	Name pulumi.StringPtrInput
	// The region identifier. - If the value of this attribute changes, Terraform will destroy and recreate the resource. - The
	// value must be one of: ["ARC-IS-HAF-1" "EUC-DE-MUC-1" "NORD-NO-KRS-1"].
	Region   pulumi.StringInput
	Rules    SecurityGroupRuleArrayInput
	Timeouts SecurityGroupTimeoutsPtrInput
}

func (SecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupArgs)(nil)).Elem()
}

type SecurityGroupInput interface {
	pulumi.Input

	ToSecurityGroupOutput() SecurityGroupOutput
	ToSecurityGroupOutputWithContext(ctx context.Context) SecurityGroupOutput
}

func (*SecurityGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGroup)(nil)).Elem()
}

func (i *SecurityGroup) ToSecurityGroupOutput() SecurityGroupOutput {
	return i.ToSecurityGroupOutputWithContext(context.Background())
}

func (i *SecurityGroup) ToSecurityGroupOutputWithContext(ctx context.Context) SecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupOutput)
}

// SecurityGroupArrayInput is an input type that accepts SecurityGroupArray and SecurityGroupArrayOutput values.
// You can construct a concrete instance of `SecurityGroupArrayInput` via:
//
//	SecurityGroupArray{ SecurityGroupArgs{...} }
type SecurityGroupArrayInput interface {
	pulumi.Input

	ToSecurityGroupArrayOutput() SecurityGroupArrayOutput
	ToSecurityGroupArrayOutputWithContext(context.Context) SecurityGroupArrayOutput
}

type SecurityGroupArray []SecurityGroupInput

func (SecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGroup)(nil)).Elem()
}

func (i SecurityGroupArray) ToSecurityGroupArrayOutput() SecurityGroupArrayOutput {
	return i.ToSecurityGroupArrayOutputWithContext(context.Background())
}

func (i SecurityGroupArray) ToSecurityGroupArrayOutputWithContext(ctx context.Context) SecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupArrayOutput)
}

// SecurityGroupMapInput is an input type that accepts SecurityGroupMap and SecurityGroupMapOutput values.
// You can construct a concrete instance of `SecurityGroupMapInput` via:
//
//	SecurityGroupMap{ "key": SecurityGroupArgs{...} }
type SecurityGroupMapInput interface {
	pulumi.Input

	ToSecurityGroupMapOutput() SecurityGroupMapOutput
	ToSecurityGroupMapOutputWithContext(context.Context) SecurityGroupMapOutput
}

type SecurityGroupMap map[string]SecurityGroupInput

func (SecurityGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGroup)(nil)).Elem()
}

func (i SecurityGroupMap) ToSecurityGroupMapOutput() SecurityGroupMapOutput {
	return i.ToSecurityGroupMapOutputWithContext(context.Background())
}

func (i SecurityGroupMap) ToSecurityGroupMapOutputWithContext(ctx context.Context) SecurityGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupMapOutput)
}

type SecurityGroupOutput struct{ *pulumi.OutputState }

func (SecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGroup)(nil)).Elem()
}

func (o SecurityGroupOutput) ToSecurityGroupOutput() SecurityGroupOutput {
	return o
}

func (o SecurityGroupOutput) ToSecurityGroupOutputWithContext(ctx context.Context) SecurityGroupOutput {
	return o
}

// The timestamp when this security group was created in RFC 3339.
func (o SecurityGroupOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGroup) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The human-readable description for the security group. - Sets the default value "" if the attribute is not set.
func (o SecurityGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGroup) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The human-readable name for the security group.
func (o SecurityGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The region identifier. - If the value of this attribute changes, Terraform will destroy and recreate the resource. - The
// value must be one of: ["ARC-IS-HAF-1" "EUC-DE-MUC-1" "NORD-NO-KRS-1"].
func (o SecurityGroupOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGroup) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o SecurityGroupOutput) Rules() SecurityGroupRuleArrayOutput {
	return o.ApplyT(func(v *SecurityGroup) SecurityGroupRuleArrayOutput { return v.Rules }).(SecurityGroupRuleArrayOutput)
}

// The security group status.
func (o SecurityGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGroup) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SecurityGroupOutput) Timeouts() SecurityGroupTimeoutsPtrOutput {
	return o.ApplyT(func(v *SecurityGroup) SecurityGroupTimeoutsPtrOutput { return v.Timeouts }).(SecurityGroupTimeoutsPtrOutput)
}

type SecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGroup)(nil)).Elem()
}

func (o SecurityGroupArrayOutput) ToSecurityGroupArrayOutput() SecurityGroupArrayOutput {
	return o
}

func (o SecurityGroupArrayOutput) ToSecurityGroupArrayOutputWithContext(ctx context.Context) SecurityGroupArrayOutput {
	return o
}

func (o SecurityGroupArrayOutput) Index(i pulumi.IntInput) SecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityGroup {
		return vs[0].([]*SecurityGroup)[vs[1].(int)]
	}).(SecurityGroupOutput)
}

type SecurityGroupMapOutput struct{ *pulumi.OutputState }

func (SecurityGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGroup)(nil)).Elem()
}

func (o SecurityGroupMapOutput) ToSecurityGroupMapOutput() SecurityGroupMapOutput {
	return o
}

func (o SecurityGroupMapOutput) ToSecurityGroupMapOutputWithContext(ctx context.Context) SecurityGroupMapOutput {
	return o
}

func (o SecurityGroupMapOutput) MapIndex(k pulumi.StringInput) SecurityGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityGroup {
		return vs[0].(map[string]*SecurityGroup)[vs[1].(string)]
	}).(SecurityGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupInput)(nil)).Elem(), &SecurityGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupArrayInput)(nil)).Elem(), SecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupMapInput)(nil)).Elem(), SecurityGroupMap{})
	pulumi.RegisterOutputType(SecurityGroupOutput{})
	pulumi.RegisterOutputType(SecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupMapOutput{})
}
